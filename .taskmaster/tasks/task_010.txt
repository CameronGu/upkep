# Task ID: 10
# Title: Implement Basic Interval Management
# Status: pending
# Dependencies: 3
# Priority: medium
# Description: Add simple interval-based execution logic to skip operations within configured intervals and display clear skip messages.
# Details:
Store basic interval settings in simplified YAML config. Use simple Bash date arithmetic for interval checks. Display clear skip messages with time remaining. Support basic per-module intervals. Remove complex dynamic adjustment - simple fixed intervals are more reliable.

# Test Strategy:
Test interval enforcement and skip logic. Validate clear messaging for skipped operations.

# Subtasks:
## 1. Implement interval storage and retrieval from YAML [pending]
### Dependencies: None
### Description: Develop functionality to store interval data in a YAML file and retrieve it within the script, ensuring compatibility with Bash parsing tools.
### Details:
Use simple YAML parsing (avoiding complex yq dependencies where possible) to read basic interval values for modules from configuration file.

## 2. Add Bash date arithmetic for interval checks [pending]
### Dependencies: 10.1
### Description: Integrate simple Bash date arithmetic to calculate and compare time intervals for each module based on the retrieved YAML data.
### Details:
Use basic Bash date commands to determine if required interval has elapsed since last execution. Keep arithmetic simple and reliable.

## 3. Display skip messages with time remaining [pending]
### Dependencies: 10.5
### Description: Implement logic to display clear skip messages, including the time remaining until the next allowed execution for each module.
### Details:
Calculate remaining time using simple Bash arithmetic and output user-friendly messages when a module is skipped due to interval constraints.

## 4. Support basic per-module intervals [pending]
### Dependencies: 10.1, 10.5, 10.7
### Description: Extend the interval logic to handle distinct intervals for each module as defined in the simplified YAML configuration.
### Details:
Ensure the script can read and apply different interval values for each module, allowing for basic granular control without complex category management.

## 5. Remove Dynamic Adjustment Complexity [pending]
### Dependencies: 10.1, 10.5, 10.7, 10.3
### Description: Eliminate complex dynamic adjustment features in favor of simple, predictable fixed intervals.
### Details:
Remove complex system state monitoring and dynamic interval modification. Fixed intervals are more predictable and reliable for personal Linux maintenance.

